"use client";
import { LoggedInContext } from "@/utils/loggedInContext";
import { CssBaseline, ThemeProvider } from "@mui/material";
import { useEffect, useState } from "react";
import { Footer, NavBar } from "./components";
import "./globals.css";
import { lightTheme } from "./theme/themes";

export type SetIsLoggedInType = {
  setIsLoggedIn: (loggedIn: boolean) => void;
};

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  //Todo:
  // add loading state while user is fetched
  const [isLoggedIn, setIsLoggedIn] = useState(false);

  useEffect(() => {
    // Check if the user is logged in on page load
    const checkLoginStatus = async () => {
      try {
        const token = localStorage.getItem("token");

        const response = await fetch("http://localhost:3001/api/v1/profile", {
          method: "GET",
          headers: {
            Authorization: `Bearer ${token}`,
          },
        });

        console.log("response", response);

        if (response.ok) setIsLoggedIn(true);
      } catch (error) {
        console.log(error);
      }
    };
    checkLoginStatus();
  }, []);

  return (
    <html lang="en">
      <head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </head>
      <ThemeProvider theme={lightTheme}>
        <CssBaseline />
        <body>
          <LoggedInContext.Provider
            value={{
              isLoggedIn,
              setIsLoggedIn,
            }}
          >
            <NavBar
              showLogOutButton={isLoggedIn}
              setIsLoggedIn={setIsLoggedIn}
            />
            <main>
                {children}
            </main>
            <Footer />
          </LoggedInContext.Provider>
        </body>
      </ThemeProvider>
    </html>
  );
}
